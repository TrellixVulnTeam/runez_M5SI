#!/usr/bin/env python3

"""
Take a peek at how colors look
"""

import os
import subprocess
import sys


SCRIPT_PATH = os.path.abspath(__file__)
TESTS_FOLDER = os.path.dirname(SCRIPT_PATH)
PROJECT_FOLDER = os.path.dirname(TESTS_FOLDER)


def try_venv(*paths):
    """Conveniently rerun this script from a venv, if possible (otherwise complain)"""
    for path in paths:
        folder = os.path.join(PROJECT_FOLDER, path)
        pyexe = os.path.join(folder, "bin", "python")
        if os.path.isfile(pyexe):
            args = [pyexe, SCRIPT_PATH] + sys.argv[1:]
            r = subprocess.run(args)
            sys.exit(r.returncode)
    sys.exit("Please build a venv first in one of: %s" % ", ".join(paths))


if not sys.exec_prefix.startswith(PROJECT_FOLDER):
    try_venv(".venv", ".tox/py37", ".tox/py36", ".tox/py27")


import runez


def sized(text, size):
    fmt = "{:%s}" % runez.color_adjusted_size(text, size)
    return fmt.format(text)


def show_fgcolors(bg=runez.plain):
    longest_color_name = max(len(c.name) for c in runez.colors.fg.colors)
    for color in [runez.plain] + runez.colors.fg.colors:
        color_name = color.name
        line = [bg(color(sized(color_name, longest_color_name + 1)))]
        for style in runez.colors.terminal.styles:
            text = "%s %s" % (style.name, color_name)
            line.append(sized(bg(style(color(text))), longest_color_name + len(style.name) + 2))

        print(" ".join(line))

    print("")


print("Backend: %s %s\n" % (runez.colors.terminal.BACKEND.__name__, runez.colors.terminal.BACKEND.flavor))
show_fgcolors()
show_fgcolors(bg=runez.bg.yellow)
